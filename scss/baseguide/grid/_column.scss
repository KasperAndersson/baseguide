@mixin column-base($gutter: $grid-gutter) {
	@include make-gutters($gutter);

	position: relative;
	float: left;
	width: 100%;
	min-height: 1px;
}

@mixin column($size: expand, $columns: $grid-columns) {
	@if (type-of($size) == number) {
		width: percentage($size / $columns);
	}
	@else {
		width: auto;
		max-width: 100%;

		@if $grid-flexbox {
			@if $size == shrink {
				flex: 0 0 auto;
			}

			@if $size == expand {
				flex: 1 1 auto;
			}
		}
	}
}

@mixin column-block($columns: $grid-columns) {
	width: percentage(1 / $columns);

	&:nth-of-type(1n) {
		clear: none;
	}

	&:nth-child(#{$columns}n+1) {
		clear: both;
	}
}

@mixin column-push($size, $columns: $grid-columns) {
	@if $size > 0 {
		left: percentage($size / $columns);
	}
	@else {
		left: auto;
	}
}

@mixin column-pull($size, $columns: $grid-columns) {
	@if $size > 0 {
		right: percentage($size / $columns);
	}
	@else {
		right: auto;
	}
}

@mixin column-offset($size, $columns: $grid-columns) {
	margin-left: percentage($size / $columns);
}

@mixin calc-column($breakpoint, $index, $type) {
	@if ($type == width) and ($index > 0) {
		.col-#{$breakpoint}-#{$index} {
			width: percentage($index / $grid-columns);
		}
	}

	@if ($type == push) and ($index > 0) {
		.col-#{$breakpoint}-push-#{$index} {
			left: percentage($index / $grid-columns);
		}
	}

	@if ($type == push) and ($index == 0) {
		.col-#{$breakpoint}-push-0 {
			left: auto;
		}
	}

	@if ($type == pull) and ($index > 0) {
		.col-#{$breakpoint}-pull-#{$index} {
			right: percentage($index / $grid-columns);
		}
	}

	@if ($type == pull) and ($index == 0) {
		.col-#{$breakpoint}-pull-0 {
			right: auto;
		}
	}

	@if ($type == offset) {
		.col-#{$breakpoint}-offset-#{$index} {
			margin-left: percentage($index / $grid-columns);
		}
	}
}

// Create columns for a specific breakpoint
@mixin calc-all-columns($breakpoint) {
	@for $i from 0 through $grid-columns {
		@include calc-column($breakpoint, $i, width);
		@include calc-column($breakpoint, $i, pull);
		@include calc-column($breakpoint, $i, push);

		@if ($i < $grid-columns) {
			@include calc-column($breakpoint, $i, offset);
		}
	}
}
